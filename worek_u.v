module worek_u(
	sys_clk,
	out,
	out1,
	IRF_sing,
	woek_en);

	//---Ports declearation: generated by Robei---
	input sys_clk;
	output out;
	output out1;
	input IRF_sing;
	input [2:0] woek_en;

	wire sys_clk;
	reg out;
	reg out1;
	wire IRF_sing;
	wire [2:0] woek_en;

	//----Code starts here: integrated by Robei-----
	parameter     woek_sl  = 50000000;
	parameter     work_sl  =  1250000000;
		
		//cntreg define
		reg      [27:0]         cnt_work = 0;
		reg      [31:0]         cnt_daley = 0;
		reg                         IRF_state;
		
		//捕获一个越障使能信号
		always@(posedge sys_clk) begin
		         if(!IRF_sing) begin
		               IRF_state <= 1;
		         end
		         else if(cnt_daley == 1250000000) begin
		               IRF_state <= 0;
		         end
		         else begin
		               IRF_state <= IRF_state;
		         end
		end
		
		//cnt_work sign
		always@(posedge sys_clk) begin
		   //    if(cnt_work == 1) begin //仿真用
		     if(cnt_work ==100000000) begin
		             cnt_work <= 0;
		      end
		      else begin
		             cnt_work = cnt_work+1;
		      end
		end
		
		//cnt_daley sign
		always@(posedge sys_clk) begin
		  //    if(cnt_daley == 25) begin //仿真用
		      if(cnt_daley == 1250000000) begin
		             cnt_daley <= 0;
		      end
		      else begin
		             cnt_daley = cnt_daley+1;
		      end 
		end
		
		//工作锤操作always
		always@(posedge sys_clk ) begin
		        if(!woek_en) begin
		               if(cnt_work < woek_sl) begin     
		                    out <= 1;
		               end
		               else begin
		                    out <= 0;
		               end
		        end
		        else begin
		               out <= 0;
		        end
		end
		
		//机械臂关节操作always
		always@(posedge sys_clk ) begin
		        if(IRF_state) begin
		
		                if(cnt_daley < work_sl) begin 
		                   out1 <= 1;
		              end
		              else begin
		                   out1 <= 0;
		              end
		        end
		        else begin
		              out1 <= 0;
		        end
		end
		
		
		
	
	
	
endmodule    //worek_u

